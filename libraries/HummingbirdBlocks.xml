<blocks app="NetsBlox 1.31.4, http://netsblox.org" version="1.31.4"><block-definition collabId="item_0_592" s="Hummingbird Play Note %&apos;note&apos; for %&apos;beats&apos; beats on robot %&apos;robot&apos;" type="command" category="sound"><header></header><code></code><translations>ko:Hummingbird _ 번 음을 _ 박자로 연주하기&#xD;de:Hummingbird Spiele Note _ für _ Schläge&#xD;pt:Hummingbird Toque Notas _ por _ Batidas&#xD;fr:Hummingbird Jouer la note _ pour _ battement(s)&#xD;nl:Hummingbird Speel Noot _ voor _ Beats&#xD;zh_CN:Hummingbird 演奏 音阶 _ 于 _ 拍&#xD;zh_TW:Hummingbird 演奏 音階 _ 於 _ 拍&#xD;ar:Hummingbird تشغيل الموسيقى  _ _&#xD;dk:Hummingbird Spil tone _ i _ slag&#xD;he:Hummingbird נגן תו   _  במשך  _   פעימות&#xD;es:Hummingbird Emitir un sonido _ por _ pulsos&#xD;ca:Hummingbird Toca nota _ durant _ temps&#xD;fi:Hummingbird Soita sävel _  _ iskun ajan&#xD;sv:Hummingbird Spela not _ _&#xD;</translations><inputs><input type="%n">60</input><input type="%n">0.5</input><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input></inputs><script><block collabId="item_0_584" s="doIf"><block collabId="item_0_583" s="reportGreaterThan"><block collabId="item_0_582" var="note"/><l>135</l></block><script><block collabId="item_0_579" s="doSetVar"><l>note</l><l>135</l></block></script></block><block collabId="item_0_576" s="doIf"><block collabId="item_0_575" s="reportGreaterThan"><l>32</l><block collabId="item_0_573" var="note"/></block><script><block collabId="item_0_571" s="doSetVar"><l>note</l><l>32</l></block></script></block><block collabId="item_0_568" s="doIf"><block collabId="item_0_567" s="reportGreaterThan"><block collabId="item_0_566" var="beats"/><l>16</l></block><script><block collabId="item_0_563" s="doSetVar"><l>beats</l><l>16</l></block></script></block><block collabId="item_0_560" s="doIf"><block collabId="item_0_559" s="reportGreaterThan"><l>0</l><block collabId="item_0_557" var="beats"/></block><script><block collabId="item_0_555" s="doSetVar"><l>beats</l><l>0</l></block></script></block><block collabId="item_0_552" s="doSetVar"><l>beats</l><block collabId="item_0_550" s="reportRound"><block collabId="item_0_549" s="reportProduct"><block collabId="item_0_548" s="reportQuotient"><l>60000</l><block collabId="item_0_546" s="getTempo"></block></block><block collabId="item_0_545" var="beats"/></block><comment collabId="item_0_544" w="242" collapsed="false">BPM = tempo&#xD;60 * 1000/BPM = BPMS  beats per millisecond&#xD;beats = Duration in ms  = BPMS * number of beats</comment></block></block><block collabId="item_0_543" s="doRun"><block collabId="item_0_542" s="reifyReporter"><autolambda><block collabId="item_0_540" s="reportURL"><block collabId="item_0_539" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/out/playnote/</l><block collabId="item_0_536" var="note"/><l>/</l><block collabId="item_0_534" var="beats"/><l>/</l><block collabId="item_173" var="robot"/></list></block></block></autolambda><list></list></block><list></list></block><block collabId="item_0_531" s="doWait"><block collabId="item_0_530" s="reportQuotient"><block collabId="item_0_529" var="beats"/><l>1000</l></block><comment collabId="item_0_527" w="205" collapsed="false">block for number of seconds</comment></block></script></block-definition><block-definition collabId="item_0_526" s="micro:bit %&apos;device&apos; %&apos;dim&apos; on robot %&apos;robot&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">Accelerometer (m/s²)<options>Accelerometer (m/s²)&#xD;Magnetometer (µT)</options></input><input type="%txt" readonly="true">X<options>X&#xD;Y&#xD;Z</options></input><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input></inputs><script><block collabId="item_0_516" s="doIf"><block collabId="item_0_515" s="reportEquals"><block collabId="item_0_514" var="device"/><l>Accelerometer (m/s²)</l></block><script><block collabId="item_0_511" s="doSetVar"><l>device</l><l>Accelerometer</l></block></script></block><block collabId="item_0_508" s="doIf"><block collabId="item_0_507" s="reportEquals"><block collabId="item_0_506" var="device"/><l>Magnetometer (µT)</l></block><script><block collabId="item_0_503" s="doSetVar"><l>device</l><l>Magnetometer</l></block></script></block><block collabId="item_0_500" s="doReport"><block collabId="item_0_499" s="reportURL"><block collabId="item_0_498" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/in/</l><block collabId="item_0_495" var="device"/><l>/</l><block collabId="item_0_493" var="dim"/><l>/</l><block collabId="item_57" var="robot"/></list></block></block></block></script></block-definition><block-definition collabId="item_0_492" s="micro:bit Button %&apos;button&apos; on robot %&apos;robot&apos;" type="predicate" category="sensing"><header></header><code></code><translations>ko:micro:bit 버튼 _&#xD;de:micro:bit Knopf _&#xD;pt:micro:bit Tecla _&#xD;fr:micro:bit Bouton _&#xD;nl:micro:bit Knop _&#xD;zh_CN:micro:bit 按钮 _&#xD;zh_TW:micro:bit 按鈕 _&#xD;ar:micro:bit زر _&#xD;dk:micro:bit Knap _&#xD;he:micro:bit לחצן  _&#xD;es:micro:bit Pulsador _&#xD;ca:micro:bit Botó _&#xD;fi:micro:bit Painike _&#xD;sv:micro:bit Knapp _&#xD;</translations><inputs><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;Logo</options></input><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input></inputs><script><block collabId="item_0_484" s="doIfElse"><block collabId="item_0_483" s="reportEquals"><block collabId="item_0_482" s="reportURL"><block collabId="item_0_481" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/in/button/</l><block collabId="item_0_478" var="button"/><l>/</l><block collabId="item_63" var="robot"/></list></block></block><l>true</l></block><script><block collabId="item_0_475" s="doReport"><block collabId="item_0_474" s="reportBoolean"><l><bool>true</bool></l></block></block></script><script><block collabId="item_0_470" s="doReport"><block collabId="item_0_469" s="reportBoolean"><l><bool>false</bool></l></block></block></script></block></script></block-definition><block-definition collabId="item_0_466" s="micro:bit Compass on robot %&apos;robot&apos;" type="reporter" category="sensing"><header></header><code></code><translations>ko:micro:bit 나침반 센서&#xD;de:micro:bit Kompass&#xD;pt:micro:bit Bússola&#xD;fr:micro:bit Compas&#xD;nl:micro:bit Kompas&#xD;zh_CN:micro:bit 指南针&#xD;zh_TW:micro:bit 指南針&#xD;ar:micro:bit بوصلة&#xD;dk:micro:bit Kompas&#xD;he:micro:bit מצפן&#xD;es:micro:bit Brujula&#xD;ca:micro:bit Brúixola&#xD;fi:micro:bit Kompassi&#xD;sv:micro:bit Kompass&#xD;</translations><inputs><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input></inputs><script><block collabId="item_0_460" s="doReport"><block collabId="item_0_459" s="reportURL"><block collabId="item_0_458" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/in/</l><l>Compass</l><l>/</l><block collabId="item_68" var="robot"/></list></block></block></block></script></block-definition><block-definition collabId="item_0_428" s="stop all" type="command" category="control"><header></header><code></code><translations>ko:모두 멈추기&#xD;de:stoppe alles&#xD;pt:pare todos&#xD;fr:stop tout&#xD;nl:stop alle&#xD;zh_CN:停止 全部&#xD;zh_TW:停止 全部&#xD;ar:توقف الكل&#xD;dk:stop alle&#xD;he:להפסיק הכל&#xD;es:detener todo&#xD;ca:atura tot&#xD;fi:pysäytä kaikki&#xD;sv:stop allt&#xD;</translations><inputs></inputs><script><block collabId="item_0_422" s="doReport"><block collabId="item_0_421" s="reportURL"><block collabId="item_0_420" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/out/stopall</l></list></block></block></block></script></block-definition><block-definition collabId="item_0_417" s="Hummingbird Robot %&apos;robot&apos; Position Servo %&apos;port&apos; %&apos;position&apos; °" type="command" category="motion"><header></header><code></code><translations>ko:Hummingbird 위치 제어 서보 _ _ °&#xD;de:Hummingbird Position Servo _ _ °&#xD;pt:Hummingbird Posição do Servo _ _ °&#xD;fr:Hummingbird Position Servo _ _ °&#xD;nl:Hummingbird Positie-Servo _ _ °&#xD;zh_CN:Hummingbird 位置伺服 _ _ °&#xD;zh_TW:Hummingbird 位置伺服 _ _ °&#xD;ar:Hummingbird موقف محرك سيرفو المؤازر  _ _&#xD;dk:Hummingbird Positionsservo _ _ °&#xD;he:Hummingbird סרוו כיוון     _ _&#xD;es:Hummingbird Servo de posicion _ _ °&#xD;ca:Hummingbird Servo posicional _ _ °&#xD;fi:Hummingbird Asentoservo _ _ °&#xD;sv:Hummingbird Positionsservo _ _ °&#xD;</translations><inputs><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input><input type="%n" readonly="true">1<options>1&#xD;2&#xD;3&#xD;4</options></input><input type="%n">90</input></inputs><script><block collabId="item_0_408" s="doIf"><block collabId="item_0_407" s="reportLessThan"><block collabId="item_0_406" var="position"/><l>0</l></block><script><block collabId="item_0_403" s="doSetVar"><l>position</l><l>0</l></block></script></block><block collabId="item_0_400" s="doIf"><block collabId="item_0_399" s="reportGreaterThan"><block collabId="item_0_398" var="position"/><l>180</l></block><script><block collabId="item_0_395" s="doSetVar"><l>position</l><l>180</l></block></script></block><block collabId="item_0_392" s="doSetVar"><l>position</l><block collabId="item_0_390" s="reportRound"><block collabId="item_0_389" s="reportProduct"><block collabId="item_0_388" var="position"/><l>1.41</l></block></block><comment collabId="item_0_386" w="228" collapsed="false">254/180 Scaling Factor</comment></block><block collabId="item_0_385" s="doRun"><block collabId="item_0_384" s="reportJSFunction"><list><l>portnum</l><l>position</l><l>robot</l></list><l>var realPort = portnum-1;&#xD;////////////////////////////////////////////////////////////////////////////////&#xD;// In order to avoid sending more messages than the app can handle, whenever we&#xD;// send a message we also save it in a persistent global variable. When the&#xD;// message is processed in the app, the callback checks if the global variable&#xD;// still matches what it was changed to. If it was, it deletes the global&#xD;// variable. Otherwise the message is resent with new data.&#xD;//&#xD;// When this block is called it checks if the global value has been set. If it&#xD;// has, it sends a message. Otherwise it just updates the value and lets the&#xD;// callback handle it.&#xD;&#xD;&#xD;// We can&apos;t run code beforehand to define values so we must check each block&#xD;// call if they are set.&#xD;if (window.birdbrain === undefined || window.birdbrain.servos === undefined) {&#xD;    window.birdbrain = window.birdbrain || {};&#xD;    window.birdbrain.servos = {&#xD;        // By attaching this function to a global variable, it is only&#xD;        // defined once instead of every time this block is called, improving&#xD;        // performance significantly.&#xD;        setServoAngle: function (port, angle) {&#xD;            function callback() {&#xD;                if (window.birdbrain.servos[port] === angle) {&#xD;                    delete window.birdbrain.servos[port];&#xD;                }&#xD;                else {&#xD;                    window.birdbrain.servos.setServoAngle(port, window.birdbrain.servos[port]);&#xD;                }&#xD;            }&#xD;&#xD;            //Create a new XMLHttpRequest object&#xD;            var xhr = new XMLHttpRequest();&#xD;            var actualPort = port+1;         &#xD;            var thisURL = "http://127.0.0.1:30061/hummingbird/out/servo/" + actualPort + "/" + angle + "/" + robot;&#xD;            //console.log("thisURL: " + thisURL);&#xD;            xhr.open("GET", thisURL, true);&#xD;            xhr.onload = function (e) {&#xD;              if (xhr.readyState === 4) {&#xD;                if (xhr.status === 200) {&#xD;                  callback();&#xD;                } else {&#xD;                  console.error(xhr.statusText);&#xD;                }&#xD;              }&#xD;            };&#xD;            xhr.onerror = function (e) {&#xD;              console.error(xhr.statusText);&#xD;            };&#xD;            xhr.send(null);          &#xD;            &#xD;        }&#xD;    };&#xD;}&#xD;&#xD;//var realAngle = Math.floor(ang*1.25);&#xD;&#xD;//realAngle = Math.max(Math.min(realAngle,225.0),0.0);&#xD;&#xD;if (window.birdbrain.servos[realPort] === undefined) {&#xD;    window.birdbrain.servos.setServoAngle(realPort, position);&#xD;}&#xD;&#xD;window.birdbrain.servos[realPort] = position;</l></block><list><block collabId="item_0_378" var="port"/><block collabId="item_0_377" var="position"/><block collabId="item_186" var="robot"/></list></block><block collabId="item_0_376" s="doWait"><l>0</l></block></script><scripts><script x="187.1428571428571" y="82.28571428571428"><block collabId="item_0_372" s="doReport"><block collabId="item_0_371" s="reportURL"><block collabId="item_0_370" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/out/servo/</l><l></l><l>/</l><l></l></list></block></block></block></script></scripts></block-definition><block-definition collabId="item_0_364" s="Hummingbird Robot %&apos;robot&apos; Rotation Servo %&apos;port&apos; %&apos;speed&apos; %" type="command" category="motion"><header></header><code></code><translations>ko:Hummingbird 회전속도 제어 서보 _ _ %&#xD;de:Hummingbird Drehung Servo _ _ %&#xD;pt:Hummingbird Rotação do Servo _ _ %&#xD;fr:Hummingbird Rotation Servo _ _ %&#xD;nl:Hummingbird Draai-Servo _ _ %&#xD;zh_CN:Hummingbird 旋转伺服 _ _ %&#xD;zh_TW:Hummingbird 旋轉伺服 _ _ %&#xD;ar:Hummingbird فتحة دوران المحرك المؤازر  _ _&#xD;dk:Hummingbird Rotationsservo _ _ %&#xD;he:Hummingbird סרוו סיבובים    _ _ %&#xD;es:Hummingbird Servo de rotacion _ _ %&#xD;ca:Hummingbird Servo rotacional _ _ %&#xD;fi:Hummingbird Kiertoservo _ _ %&#xD;sv:Hummingbird Rotationsservo _ _ %&#xD;</translations><inputs><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input><input type="%n" readonly="true">1<options>1&#xD;2&#xD;3&#xD;4</options></input><input type="%n">0</input></inputs><script><block collabId="item_0_355" s="doIf"><block collabId="item_0_354" s="reportLessThan"><block collabId="item_0_353" var="speed"/><l>-100</l></block><script><block collabId="item_0_350" s="doSetVar"><l>speed</l><l>-100</l></block></script></block><block collabId="item_0_347" s="doIf"><block collabId="item_0_346" s="reportGreaterThan"><block collabId="item_0_345" var="speed"/><l>100</l></block><script><block collabId="item_0_342" s="doSetVar"><l>speed</l><l>100</l></block></script></block><block collabId="item_0_339" s="doIfElse"><block collabId="item_0_338" s="reportAnd"><block collabId="item_0_337" s="reportGreaterThan"><block collabId="item_0_336" var="speed"/><l>-10</l></block><block collabId="item_0_334" s="reportLessThan"><block collabId="item_0_333" var="speed"/><l>10</l></block></block><script><block collabId="item_0_330" s="doSetVar"><l>speed</l><l>255</l></block></script><script><block collabId="item_0_326" s="doSetVar"><l>speed</l><block collabId="item_0_324" s="reportRound"><block collabId="item_0_323" s="reportSum"><block collabId="item_0_322" s="reportQuotient"><block collabId="item_0_321" s="reportProduct"><block collabId="item_0_320" var="speed"/><l>23</l></block><l>100</l></block><l>122</l></block></block></block></script></block><block collabId="item_0_316" s="doRun"><block collabId="item_0_315" s="reportJSFunction"><list><l>portnum</l><l>speed</l><l>robot</l></list><l>var realPort = portnum-1;&#xD;////////////////////////////////////////////////////////////////////////////////&#xD;// In order to avoid sending more messages than the app can handle, whenever we&#xD;// send a message we also save it in a persistent global variable. When the&#xD;// message is processed in the app, the callback checks if the global variable&#xD;// still matches what it was changed to. If it was, it deletes the global&#xD;// variable. Otherwise the message is resent with new data.&#xD;//&#xD;// When this block is called it checks if the global value has been set. If it&#xD;// has, it sends a message. Otherwise it just updates the value and lets the&#xD;// callback handle it.&#xD;&#xD;&#xD;// We can&apos;t run code beforehand to define values so we must check each block&#xD;// call if they are set.&#xD;if (window.birdbrain === undefined || window.birdbrain.rotationServos === undefined) {&#xD;    window.birdbrain = window.birdbrain || {};&#xD;    window.birdbrain.rotationServos = {&#xD;        // By attaching this function to a global variable, it is only&#xD;        // defined once instead of every time this block is called, improving&#xD;        // performance significantly.&#xD;        setServoSpeed: function (port, speed) {&#xD;            function callback() {&#xD;                if (window.birdbrain.rotationServos[port] === speed) {&#xD;                    delete window.birdbrain.rotationServos[port];&#xD;                }&#xD;                else {&#xD;                    window.birdbrain.rotationServos.setServoSpeed(port, window.birdbrain.rotationServos[port]);&#xD;                }&#xD;            }&#xD;&#xD;            //Create a new XMLHttpRequest object&#xD;            var xhr = new XMLHttpRequest();&#xD;            var actualPort = port+1;         &#xD;            var thisURL = "http://127.0.0.1:30061/hummingbird/out/rotation/" + actualPort + "/" + speed;&#xD;            //console.log("thisURL: " + thisURL);&#xD;            xhr.open("GET", thisURL, true);&#xD;            xhr.onload = function (e) {&#xD;              if (xhr.readyState === 4) {&#xD;                if (xhr.status === 200) {&#xD;                  callback();&#xD;                } else {&#xD;                  console.error(xhr.statusText);&#xD;                }&#xD;              }&#xD;            };&#xD;            xhr.onerror = function (e) {&#xD;              console.error(xhr.statusText);&#xD;            };&#xD;            xhr.send(null);          &#xD;            &#xD;        }&#xD;    };&#xD;}&#xD;&#xD;if (window.birdbrain.rotationServos[realPort] === undefined) {&#xD;    window.birdbrain.rotationServos.setServoSpeed(realPort, speed);&#xD;}&#xD;&#xD;window.birdbrain.rotationServos[realPort] = speed;</l></block><list><block collabId="item_0_309" var="port"/><block collabId="item_0_308" var="speed"/><block collabId="item_193" var="robot"/></list></block></script></block-definition><block-definition collabId="item_0_307" s="Hummingbird LED on robot %&apos;robot&apos; port %&apos;port&apos; %&apos;intensity&apos; %" type="command" category="looks"><header></header><code></code><translations>ko:Hummingbird LED _ _ %&#xD;de:Hummingbird LED _ _ %&#xD;pt:Hummingbird LED _ _ %&#xD;fr:Hummingbird LED _ _ %&#xD;nl:Hummingbird LED _ _ %&#xD;zh_CN:Hummingbird LED _ _ %&#xD;zh_TW:Hummingbird LED _ _ %&#xD;ar:Hummingbird ضوء _ _&#xD;dk:Hummingbird LED _ _ %&#xD;he:Hummingbird לד   % _ _&#xD;es:Hummingbird LED _ _ %&#xD;ca:Hummingbird LED _ _ %&#xD;fi:Hummingbird LED _ _ %&#xD;sv:Hummingbird LED _ _ %&#xD;</translations><inputs><input type="%s" readonly="true">A<options>A&#xD;B&#xD;C</options></input><input type="%n" readonly="true">1<options>1&#xD;2&#xD;3</options></input><input type="%n">0</input></inputs><script><block collabId="item_0_298" s="doIf"><block collabId="item_0_297" s="reportLessThan"><block collabId="item_0_296" var="intensity"/><l>0</l></block><script><block collabId="item_0_293" s="doSetVar"><l>intensity</l><l>0</l></block></script></block><block collabId="item_0_290" s="doIf"><block collabId="item_0_289" s="reportGreaterThan"><block collabId="item_0_288" var="intensity"/><l>100</l></block><script><block collabId="item_0_285" s="doSetVar"><l>intensity</l><l>100</l></block></script></block><block collabId="item_0_282" s="doRun"><block collabId="item_0_281" s="reportJSFunction"><list><l>portnum,intensitynum,robot</l></list><l>//var hummingbirdAppID = "lfloofocohhfeeoohpokmljiinfmpenj";&#xD;var realPort = portnum-1;&#xD;////////////////////////////////////////////////////////////////////////////////&#xD;// In order to avoid sending more messages than the app can handle, whenever we&#xD;// send a message we also save it in a persistent global variable. When the&#xD;// message is processed in the app, the callback checks if the global variable&#xD;// still matches what it was changed to. If it was, it deletes the global&#xD;// variable. Otherwise the message is resent with new data.&#xD;//&#xD;// When this block is called it checks if the global value has been set. If it&#xD;// has, it sends a message. Otherwise it just updates the value and lets the&#xD;// callback handle it.&#xD;&#xD;&#xD;// We can&apos;t run code beforehand to define values so we must check each block&#xD;// call if they are set.&#xD;if (window.birdbrain === undefined || window.birdbrain.LEDs === undefined) {&#xD;    window.birdbrain = window.birdbrain || {};&#xD;    window.birdbrain.LEDs = {&#xD;        // By attaching this function to a global variable, it is only&#xD;        // defined once instead of every time this block is called, improving&#xD;        // performance significantly.&#xD;        setLEDIntensity: function(port, intensity) {&#xD;            function callback() {&#xD;                if (window.birdbrain.LEDs[port] === intensity) {&#xD;                    delete window.birdbrain.LEDs[port];&#xD;                }&#xD;                else {&#xD;                    window.birdbrain.LEDs.setLEDIntensity(port, window.birdbrain.LEDs[port]);&#xD;                }&#xD;            }&#xD;            /*&#xD;            var report = {&#xD;                message:"L".charCodeAt(0),&#xD;                port: port.toString().charCodeAt(0),&#xD;                intensity: intensity&#xD;            };&#xD;            chrome.runtime.sendMessage(hummingbirdAppID, report, callback);&#xD;            */&#xD;&#xD;            //Create a new XMLHttpRequest object&#xD;            var xhr = new XMLHttpRequest();&#xD;            var actualPort = port+1;&#xD;            var ledURL = "http://127.0.0.1:30061/hummingbird/out/led/" + actualPort + "/" + intensity + "/" + robot;&#xD;            xhr.open("GET", ledURL, true);&#xD;            xhr.onload = function (e) {&#xD;              if (xhr.readyState === 4) {&#xD;                if (xhr.status === 200) {&#xD;                  callback();&#xD;                } else {&#xD;                  console.error(xhr.statusText);&#xD;                }&#xD;              }&#xD;            };&#xD;            xhr.onerror = function (e) {&#xD;              console.error(xhr.statusText);&#xD;            };&#xD;            xhr.send(null);&#xD;&#xD;        }&#xD;    }&#xD;}&#xD;&#xD;var realIntensity = Math.floor(intensitynum*2.55);&#xD;&#xD;realIntensity = Math.max(Math.min(realIntensity,255.0),0.0);&#xD;&#xD;if (window.birdbrain.LEDs[realPort] === undefined) {&#xD;  window.birdbrain.LEDs.setLEDIntensity(realPort, realIntensity);&#xD;}&#xD;&#xD;window.birdbrain.LEDs[realPort] = realIntensity;</l></block><list><block collabId="item_0_276" var="port"/><block collabId="item_0_275" var="intensity"/><block collabId="item_179" var="robot"/></list></block><block collabId="item_0_274" s="doWait"><l>0</l></block></script><scripts><script x="396.42857142857156" y="46.5714285714285"><block collabId="item_0_270" s="doReport"><block collabId="item_0_269" s="reportURL"><block collabId="item_0_268" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/out/led/</l><block collabId="item_0_265" var="port"/><l>/</l><block collabId="item_0_263" var="intensity"/></list></block></block></block></script><script x="396.42857142857156" y="100.28571428571439"><block collabId="item_0_261" s="doSetVar"><l>intensity</l><block collabId="item_0_259" s="reportRound"><block collabId="item_0_258" s="reportProduct"><block collabId="item_0_257" var="intensity"/><l>2.55</l><comment collabId="item_0_255" w="90" collapsed="false">Scale factor 255/100</comment></block></block></block></script></scripts></block-definition><block-definition collabId="item_0_254" s="Hummingbird Tri-LED on robot %&apos;robot&apos; port %&apos;port&apos; R %&apos;redLED&apos; % G %&apos;greenLED&apos; % B %&apos;blueLED&apos; %" type="command" category="looks"><header></header><code></code><translations>ko:Hummingbird 삼색 LED _ 빨강 _ % 초록 _ % 파랑 _ %&#xD;de:Hummingbird Dreifarben-LED _ R _ % G _ % B _ %&#xD;pt:Hummingbird LED Tricolor _ R _ % G _ % B _ %&#xD;fr:Hummingbird Tri-LED _ R _ % G _ % B _ %&#xD;nl:Hummingbird Tri-LED _ R _ % G _ % B _ %&#xD;zh_CN:Hummingbird 三色LED _ 红 _ % 绿 _ % 蓝 _ %&#xD;zh_TW:Hummingbird 三色LED _ 紅 _ % 綠 _ % 藍 _ %&#xD;ar:Hummingbird ضوء الصمام الثلاثي  _ _ _ _&#xD;dk:Hummingbird Tri-LED _ R _ % G _ % B _ %&#xD;he:Hummingbird לד שלושה צבעים       % _ R   _   %  G _  %   B  _&#xD;es:Hummingbird Led tricolor _ R _ % G _ % B _ %&#xD;ca:Hummingbird Tri-LED _ vermell _ % verd _ % blau _ %&#xD;fi:Hummingbird Tri-LED _ R _ % G _ % B _ %&#xD;sv:Hummingbird Tri-LED _ R _ % G _ % B _ %&#xD;</translations><inputs><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input><input type="%n" readonly="true">1<options>1&#xD;2</options></input><input type="%n">0</input><input type="%n">0</input><input type="%n">0</input></inputs><script><block collabId="item_0_243" s="doIf"><block collabId="item_0_242" s="reportLessThan"><block collabId="item_0_241" var="redLED"/><l>0</l></block><script><block collabId="item_0_238" s="doSetVar"><l>redLED</l><l>0</l></block></script></block><block collabId="item_0_235" s="doIf"><block collabId="item_0_234" s="reportGreaterThan"><block collabId="item_0_233" var="redLED"/><l>100</l></block><script><block collabId="item_0_230" s="doSetVar"><l>redLED</l><l>100</l></block></script></block><block collabId="item_0_227" s="doIf"><block collabId="item_0_226" s="reportLessThan"><block collabId="item_0_225" var="greenLED"/><l>0</l></block><script><block collabId="item_0_222" s="doSetVar"><l>greenLED</l><l>0</l></block></script></block><block collabId="item_0_219" s="doIf"><block collabId="item_0_218" s="reportGreaterThan"><block collabId="item_0_217" var="greenLED"/><l>100</l></block><script><block collabId="item_0_214" s="doSetVar"><l>greenLED</l><l>100</l></block></script></block><block collabId="item_0_211" s="doIf"><block collabId="item_0_210" s="reportLessThan"><block collabId="item_0_209" var="blueLED"/><l>0</l></block><script><block collabId="item_0_206" s="doSetVar"><l>blueLED</l><l>0</l></block></script></block><block collabId="item_0_203" s="doIf"><block collabId="item_0_202" s="reportGreaterThan"><block collabId="item_0_201" var="blueLED"/><l>100</l></block><script><block collabId="item_0_198" s="doSetVar"><l>blueLED</l><l>100</l></block></script></block><block collabId="item_0_195" s="doRun"><block collabId="item_0_194" s="reportJSFunction"><list><l>portnum</l><l>rednum</l><l>greennum</l><l>bluenum</l><l>robot</l></list><l>var realPort = portnum-1;&#xD;////////////////////////////////////////////////////////////////////////////////&#xD;// In order to avoid sending more messages than the app can handle, whenever we&#xD;// send a message we also save it in a persistent global variable. When the&#xD;// message is processed in the app, the callback checks if the global variable&#xD;// still matches what it was changed to. If it was, it deletes the global&#xD;// variable. Otherwise the message is resent with new data.&#xD;//&#xD;// When this block is called it checks if the global value has been set. If it&#xD;// has, it sends a message. Otherwise it just updates the value and lets the&#xD;// callback handle it.&#xD;&#xD;&#xD;// We can&apos;t run code beforehand to define values so we must check each block&#xD;// call if they are set.&#xD;if (window.birdbrain === undefined || window.birdbrain.triLEDs === undefined) {&#xD;    window.birdbrain = window.birdbrain || {};&#xD;    window.birdbrain.triLEDs = {&#xD;        // By attaching this function to a global variable, it is only&#xD;        // defined once instead of every time this block is called, improving&#xD;        // performance significantly.&#xD;        setLEDIntensities: function(port, intensities) {&#xD;            function callback() {&#xD;                if (JSON.stringify(window.birdbrain.triLEDs[port]) === JSON.stringify(intensities)) {&#xD;                    delete window.birdbrain.triLEDs[port];&#xD;                }&#xD;                else {&#xD;                    window.birdbrain.triLEDs.setLEDIntensities(port, window.birdbrain.triLEDs[port]);&#xD;                }&#xD;            }&#xD;&#xD;            //Create a new XMLHttpRequest object&#xD;            var xhr = new XMLHttpRequest();&#xD;            var actualPort = port+1;&#xD;            /*  Note RGB:&#xD;                red: intensities[0],&#xD;                green: intensities[1],&#xD;                blue: intensities[2]  &#xD;            */&#xD;            &#xD;            var thisURL = "http://127.0.0.1:30061/hummingbird/out/triled/" + actualPort + "/" + intensities[0] + "/" + intensities[1] + "/" + intensities[2] + "/" + robot;&#xD;            //console.log("thisURL: " + thisURL);&#xD;            xhr.open("GET", thisURL, true);&#xD;            xhr.onload = function (e) {&#xD;              if (xhr.readyState === 4) {&#xD;                if (xhr.status === 200) {&#xD;                  callback();&#xD;                } else {&#xD;                  console.error(xhr.statusText);&#xD;                }&#xD;              }&#xD;            };&#xD;            xhr.onerror = function (e) {&#xD;              console.error(xhr.statusText);&#xD;            };&#xD;            xhr.send(null);&#xD;        }&#xD;    }&#xD;}&#xD;&#xD;var realIntensities = [rednum, greennum, bluenum].map(function(intensity) {&#xD;    return Math.floor(Math.max(Math.min(intensity*2.55, 255), 0));&#xD;});&#xD;&#xD;if (window.birdbrain.triLEDs[realPort] === undefined) {&#xD;    window.birdbrain.triLEDs.setLEDIntensities(realPort, realIntensities);&#xD;}&#xD;&#xD;window.birdbrain.triLEDs[realPort] = realIntensities;&#xD;</l></block><list><block collabId="item_0_186" var="port"/><block collabId="item_0_185" var="redLED"/><block collabId="item_0_184" var="greenLED"/><block collabId="item_0_183" var="blueLED"/><block collabId="item_166" var="robot"/></list></block><block collabId="item_0_182" s="doWait"><l>0</l></block></script><scripts><script x="251.42857142857156" y="108.85714285714295"><block collabId="item_0_178" s="doSetVar"><l>redLED</l><block collabId="item_0_176" s="reportRound"><block collabId="item_0_175" s="reportProduct"><block collabId="item_0_174" var="redLED"/><l>2.55</l><comment collabId="item_0_172" w="90" collapsed="false">Scale factor 255/100</comment></block></block></block><block collabId="item_0_171" s="doSetVar"><l>blueLED</l><block collabId="item_0_169" s="reportRound"><block collabId="item_0_168" s="reportProduct"><block collabId="item_0_167" var="blueLED"/><l>2.55</l><comment collabId="item_0_165" w="90" collapsed="false">Scale factor 255/100</comment></block></block></block><block collabId="item_0_164" s="doSetVar"><l>greenLED</l><block collabId="item_0_162" s="reportRound"><block collabId="item_0_161" s="reportProduct"><block collabId="item_0_160" var="greenLED"/><l>2.55</l><comment collabId="item_0_158" w="90" collapsed="false">Scale factor 255/100</comment></block></block></block><block collabId="item_0_157" s="doReport"><block collabId="item_0_156" s="reportURL"><block collabId="item_0_155" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/out/triled/</l><l></l><l>/</l><l></l><l>/</l><l></l><l>/</l><l></l></list></block></block></block></script></scripts></block-definition><block-definition collabId="item_0_145" s="micro:bit Print %&apos;string&apos; on robot %&apos;robot&apos;" type="command" category="looks"><header></header><code></code><translations>ko:micro:bit 출력 _&#xD;de:micro:bit Drucke _&#xD;pt:micro:bit Imprimir _&#xD;fr:micro:bit Imprimer _&#xD;nl:micro:bit Schrijf _&#xD;zh_CN:micro:bit 打印 _&#xD;zh_TW:micro:bit 打印 _&#xD;ar:micro:bit طباعة _&#xD;dk:micro:bit Vis _&#xD;he:micro:bit הדפס  _&#xD;es:micro:bit Imprimir _&#xD;ca:micro:bit Escriu _&#xD;fi:micro:bit Näytä teksti _&#xD;sv:micro:bit Visa text _&#xD;</translations><inputs><input type="%txt">Hello</input><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input></inputs><script><block collabId="item_0_138" s="doRun"><block collabId="item_0_137" s="reportJSFunction"><list><l>string</l><l>robot</l></list><l>////////////////////////////////////////////////////////////////////////////////&#xD;// In order to avoid sending more messages than the app can handle, whenever we&#xD;// send a message we also save it in a persistent global variable. When the&#xD;// message is processed in the app, the callback checks if the global variable&#xD;// still matches what it was changed to. If it was, it deletes the global&#xD;// variable. Otherwise the message is resent with new data.&#xD;//&#xD;// When this block is called it checks if the global value has been set. If it&#xD;// has, it sends a message. Otherwise it just updates the value and lets the&#xD;// callback handle it.&#xD;&#xD;// Encode any special characters in the URL&#xD;string = encodeURIComponent(string);&#xD;&#xD;&#xD;// We can&apos;t run code beforehand to define values so we must check each block&#xD;// call if they are set.&#xD;if (window.birdbrain === undefined || window.birdbrain.printObj === undefined) {&#xD;    window.birdbrain = window.birdbrain || {};&#xD;    window.birdbrain.printObj = {&#xD;        // By attaching this function to a global variable, it is only&#xD;        // defined once instead of every time this block is called, improving&#xD;        // performance significantly.&#xD;        printString: function(string) {&#xD;            function callback() {&#xD;                if (window.birdbrain.printObj.stringToPrint === string) {&#xD;                    delete window.birdbrain.printObj.stringToPrint;&#xD;                }&#xD;                else {&#xD;                    window.birdbrain.printObj.printString(window.birdbrain.printObj.stringToPrint);&#xD;                }&#xD;            }&#xD;            /*&#xD;            var report = {&#xD;                message:"L".charCodeAt(0),&#xD;                port: port.toString().charCodeAt(0),&#xD;                intensity: intensity&#xD;            };&#xD;            chrome.runtime.sendMessage(hummingbirdAppID, report, callback);&#xD;            */&#xD;&#xD;            //Create a new XMLHttpRequest object&#xD;            var xhr = new XMLHttpRequest();&#xD;            var printURL = "http://127.0.0.1:30061/hummingbird/out/print/" + string + "/" + robot;&#xD;            xhr.open("GET", printURL, true);&#xD;            xhr.onload = function (e) {&#xD;              if (xhr.readyState === 4) {&#xD;                if (xhr.status === 200) {&#xD;                  callback();&#xD;                } else {&#xD;                  console.error(xhr.statusText);&#xD;                }&#xD;              }&#xD;            };&#xD;            xhr.onerror = function (e) {&#xD;              console.error(xhr.statusText);&#xD;            };&#xD;            xhr.send(null);&#xD;&#xD;        }&#xD;    }&#xD;}&#xD;&#xD;//TODO Turn &apos;/&apos; chars into % &#xD;&#xD;if (window.birdbrain.printObj.stringToPrint === undefined) {&#xD;  window.birdbrain.printObj.printString(string);&#xD;}&#xD;&#xD;window.birdbrain.printObj.stringToPrint = string;</l></block><list><block collabId="item_0_132" var="string"/><block collabId="item_154" var="robot"/></list></block><block collabId="item_0_131" s="doWait"><l>0</l></block></script><scripts><script x="335" y="1024.8333343333331"><block collabId="item_0_120" var="intensity"/></script><script x="188.99999900000012" y="984"><block collabId="item_0_127" s="doReport"><block collabId="item_0_126" s="reportURL"><block collabId="item_0_125" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/out/print/</l><block collabId="item_0_122" var="string"/></list></block></block></block></script></scripts></block-definition><block-definition collabId="item_0_119" s="micro:bit Display on robot %&apos;robot&apos; $nl %&apos;r1c1&apos; %&apos;r1c2&apos; %&apos;r1c3&apos; %&apos;r1c4&apos; %&apos;r1c5&apos; $nl %&apos;r2c1&apos; %&apos;r2c2&apos; %&apos;r2c3&apos; %&apos;r2c4&apos; %&apos;r2c5&apos; $nl %&apos;r3c1&apos; %&apos;r3c2&apos; %&apos;r3c3&apos; %&apos;r3c4&apos; %&apos;r3c5&apos; $nl %&apos;r4c1&apos; %&apos;r4c2&apos; %&apos;r4c3&apos; %&apos;r4c4&apos; %&apos;r4c5&apos; $nl %&apos;r5c1&apos; %&apos;r5c2&apos; %&apos;r5c3&apos; %&apos;r5c4&apos; %&apos;r5c5&apos;" type="command" category="looks"><header></header><code></code><translations>ko:micro:bit 보이기 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;de:micro:bit LED Anzeige _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;pt:micro:bit Visor _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;fr:micro:bit Display _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;nl:micro:bit Scherm _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;zh_CN:micro:bit 显示 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;zh_TW:micro:bit 顯示 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;ar:micro:bit عرض _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;dk:micro:bit Display _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;he:micro:bit מסך _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;es:micro:bit Monitor _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;ca:micro:bit Pantalla _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;fi:micro:bit Näytä _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;sv:micro:bit Skärm _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _&#xD;</translations><inputs><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input><input type="%b">false</input></inputs><script><block collabId="item_0_88" s="doRun"><block collabId="item_0_87" s="reportJSFunction"><list><l>r1c1, r1c2, r1c3, r1c4, r1c5, r2c1, r2c2, r2c3, r2c4, r2c5, r3c1, r3c2, r3c3, r3c4, r3c5, r4c1, r4c2, r4c3, r4c4, r4c5, r5c1, r5c2, r5c3, r5c4, r5c5 , robot</l></list><l>////////////////////////////////////////////////////////////////////////////////&#xD;// In order to avoid sending more messages than the app can handle, whenever we&#xD;// send a message we also save it in a persistent global variable. When the&#xD;// message is processed in the app, the callback checks if the global variable&#xD;// still matches what it was changed to. If it was, it deletes the global&#xD;// variable. Otherwise the message is resent with new data.&#xD;//&#xD;// When this block is called it checks if the global value has been set. If it&#xD;// has, it sends a message. Otherwise it just updates the value and lets the&#xD;// callback handle it.&#xD;&#xD;// Create url representation from inputs&#xD;var symbolString =  r1c1 + "\/"+ r1c2 + "\/"+ r1c3 + "\/"+ r1c4 + "\/"+ r1c5 + "\/" +&#xD;                    r2c1 + "\/"+ r2c2 + "\/"+ r2c3 + "\/"+ r2c4 + "\/"+ r2c5 + "\/" +&#xD;                    r3c1 + "\/"+ r3c2 + "\/"+ r3c3 + "\/"+ r3c4 + "\/"+ r3c5 + "\/" +&#xD;                    r4c1 + "\/"+ r4c2 + "\/"+ r4c3 + "\/"+ r4c4 + "\/"+ r4c5 + "\/" +&#xD;                    r5c1 + "\/"+ r5c2 + "\/"+ r5c3 + "\/"+ r5c4 + "\/"+ r5c5 ;&#xD;&#xD;//r1c1, r1c2, r1c3, r1c4, r1c5, r2c1, r2c2, r2c3, r2c4, r2c5, r3c1, r3c2, r3c3, r3c4, r3c5, r4c1, r4c2, r4c3, r4c4, r4c5, r5c1, r5c2, r5c3, r5c4, r5c5 &#xD;&#xD;// We can&apos;t run code beforehand to define values so we must check each block&#xD;// call if they are set.&#xD;if (window.birdbrain === undefined || window.birdbrain.symbolObj === undefined) {&#xD;    window.birdbrain = window.birdbrain || {};&#xD;    window.birdbrain.symbolObj = {&#xD;        // By attaching this function to a global variable, it is only&#xD;        // defined once instead of every time this block is called, improving&#xD;        // performance significantly.&#xD;        printSymbol: function(symbol) {&#xD;            function callback() {&#xD;                if (window.birdbrain.symbolObj.symbolToPrint === symbol) {  // Check if arrays are equal&#xD;                    delete window.birdbrain.symbolObj.symbolToPrint;&#xD;                }&#xD;                else {&#xD;                    window.birdbrain.symbolObj.printSymbol(window.birdbrain.symbolObj.symbolToPrint);&#xD;                }&#xD;            }&#xD;&#xD;            //Create a new XMLHttpRequest object&#xD;            var xhr = new XMLHttpRequest();&#xD;            var symbolURL = "http://127.0.0.1:30061/hummingbird/out/symbol/" + robot + "/" + symbol;&#xD;            xhr.open("GET", symbolURL, true);&#xD;            xhr.onload = function (e) {&#xD;              if (xhr.readyState === 4) {&#xD;                if (xhr.status === 200) {&#xD;                  callback();&#xD;                } else {&#xD;                  console.error(xhr.statusText);&#xD;                }&#xD;              }&#xD;            };&#xD;            xhr.onerror = function (e) {&#xD;              console.error(xhr.statusText);&#xD;            };&#xD;            xhr.send(null);&#xD;&#xD;        }&#xD;    }&#xD;}&#xD;&#xD;if (window.birdbrain.symbolObj.symbolToPrint === undefined) {&#xD;  window.birdbrain.symbolObj.printSymbol(symbolString);&#xD;}&#xD;&#xD;window.birdbrain.symbolObj.symbolToPrint = symbolString;&#xD;&#xD;&#xD;</l></block><list><block collabId="item_0_82" var="r1c1"/><block collabId="item_0_81" var="r1c2"/><block collabId="item_0_80" var="r1c3"/><block collabId="item_0_79" var="r1c4"/><block collabId="item_0_78" var="r1c5"/><block collabId="item_0_77" var="r2c1"/><block collabId="item_0_76" var="r2c2"/><block collabId="item_0_75" var="r2c3"/><block collabId="item_0_74" var="r2c4"/><block collabId="item_0_73" var="r2c5"/><block collabId="item_0_72" var="r3c1"/><block collabId="item_0_71" var="r3c2"/><block collabId="item_0_70" var="r3c3"/><block collabId="item_0_69" var="r3c4"/><block collabId="item_0_68" var="r3c5"/><block collabId="item_0_67" var="r4c1"/><block collabId="item_0_66" var="r4c2"/><block collabId="item_0_65" var="r4c3"/><block collabId="item_0_64" var="r4c4"/><block collabId="item_0_63" var="r4c5"/><block collabId="item_0_62" var="r5c1"/><block collabId="item_0_61" var="r5c2"/><block collabId="item_0_60" var="r5c3"/><block collabId="item_0_59" var="r5c4"/><block collabId="item_0_58" var="r5c5"/><block collabId="item_158" var="robot"/></list></block><block collabId="item_0_57" s="doWait"><l></l></block></script><scripts><script x="731" y="16"><block collabId="item_0_53" s="doReport"><block collabId="item_0_52" s="reportURL"><block collabId="item_0_51" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/out/symbol/A/</l><block collabId="item_0_48" var="11"/><l>/</l><block collabId="item_0_46" var="12"/><l>/</l><block collabId="item_0_44" var="r1c3"/><l>/</l><block collabId="item_0_42" var="r1c4"/><l>/</l><block collabId="item_0_40" var="r1c5"/><l>/</l><block collabId="item_0_38" var="r2c1"/><l>/</l><block collabId="item_0_36" var="r2c2"/><l>/</l><block collabId="item_0_34" var="r2c3"/><l>/</l><block collabId="item_0_32" var="r2c4"/><l>/</l><block collabId="item_0_30" var="25"/><l>/</l><block collabId="item_0_28" var="31"/><l>/</l><block collabId="item_0_26" var="r3c2"/><l>/</l><block collabId="item_0_24" var="33"/><l>/</l><block collabId="item_0_22" var="34"/><l>/</l><block collabId="item_0_20" var="35"/><l>/</l><block collabId="item_0_18" var="41"/><l>/</l><block collabId="item_0_16" var="42"/><l>/</l><block collabId="item_0_14" var="43"/><l>/</l><block collabId="item_0_12" var="44"/><l>/</l><block collabId="item_0_10" var="45"/><l>/</l><block collabId="item_0_8" var="51"/><l>/</l><block collabId="item_0_6" var="52"/><l>/</l><block collabId="item_0_4" var="53"/><l>/</l><block collabId="item_0_2" var="54"/><l>/</l><block collabId="item_0" var="55"/></list></block></block></block></script></scripts></block-definition><block-definition collabId="item_26" s="Hummingbird %&apos;sensor&apos; sensor , on port %&apos;port&apos; of robot %&apos;robot&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%txt" readonly="true">Light<options>Distance (cm)&#xD;Dial&#xD;Light&#xD;Sound&#xD;Other (V)</options></input><input type="%n" readonly="true">1<options>1&#xD;2&#xD;3</options></input><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input></inputs><script><block collabId="item_341" s="doDeclareVariables"><list><l>value</l></list></block><block collabId="item_341_1" s="doIf"><block collabId="item_341_3" s="reportEquals"><block collabId="item_341_5" var="sensor"/><l>Other (V)</l></block><script><block collabId="item_341_4" s="doSetVar"><l>sensor</l><l>Other</l></block></script></block><block collabId="item_341_2" s="doIf"><block collabId="item_341_7" s="reportEquals"><block collabId="item_341_9" var="sensor"/><l>Distance (cm)</l></block><script><block collabId="item_341_8" s="doSetVar"><l>sensor</l><l>Distance</l></block></script></block><block collabId="item_341_6" s="doSetVar"><l>value</l><block collabId="item_341_11" s="reportURL"><block collabId="item_341_12" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/in/</l><block collabId="item_341_20" var="sensor"/><l>/</l><block collabId="item_341_21" var="port"/><l>/</l><block collabId="item_341_22" var="robot"/></list></block></block></block><block collabId="item_341_10" s="doIfElse"><block collabId="item_341_13" s="reportNot"><block collabId="item_341_19" s="reportEquals"><block collabId="item_341_23" var="value"/><l>Not Connected</l></block></block><script><block collabId="item_341_14" s="doIf"><block collabId="item_341_17" s="reportEquals"><block collabId="item_341_26" var="sensor"/><l>Distance</l></block><script><block collabId="item_341_18" s="doReport"><block collabId="item_341_25" s="reportRound"><block collabId="item_341_36" s="reportProduct"><l>1.17</l><block collabId="item_341_37" var="value"/></block></block><comment collabId="item_341_24" w="90" collapsed="false">117/100 Scaling factor</comment></block></script></block><block collabId="item_341_16" s="doIf"><block collabId="item_341_28" s="reportEquals"><block collabId="item_341_32" var="sensor"/><l>Other</l></block><script><block collabId="item_341_29" s="doReport"><block collabId="item_341_31" s="reportQuotient"><block collabId="item_341_44" s="reportRound"><block collabId="item_341_45" s="reportProduct"><block collabId="item_341_56" s="reportProduct"><l>0.01294</l><block collabId="item_341_57" var="value"/></block><l>100</l></block></block><l>100</l></block><comment collabId="item_341_30" w="102" collapsed="false">3.3/255 scale factor</comment></block></script></block><block collabId="item_341_27" s="doIf"><block collabId="item_341_34" s="reportEquals"><block collabId="item_341_40" var="sensor"/><l>Sound</l><comment collabId="item_341_39" w="155" collapsed="true">If connected, adjust sound level</comment></block><script><block collabId="item_341_35" s="doReport"><block collabId="item_341_38" s="reportRound"><block collabId="item_341_50" s="reportProduct"><l>0.784</l><block collabId="item_341_52" var="value"/><comment collabId="item_341_51" w="140" collapsed="false">200/255 Scaling factor</comment></block></block></block></script></block><block collabId="item_341_33" s="doIf"><block collabId="item_341_42" s="reportEquals"><block collabId="item_341_47" var="sensor"/><l>Light</l></block><script><block collabId="item_341_43" s="doReport"><block collabId="item_341_46" s="reportRound"><block collabId="item_341_55" s="reportProduct"><l>0.392</l><block collabId="item_341_59" var="value"/><comment collabId="item_341_58" w="140" collapsed="false">100/255 Scaling factor</comment></block></block></block></script></block><block collabId="item_341_41" s="doIf"><block collabId="item_341_48" s="reportEquals"><block collabId="item_341_54" var="sensor"/><l>Dial</l></block><script><block collabId="item_341_49" s="doReport"><block collabId="item_341_53" s="reportRound"><block collabId="item_341_60" s="reportProduct"><l>0.435</l><block collabId="item_341_62" var="value"/><comment collabId="item_341_61" w="140" collapsed="false">100/230 Scaling factor</comment></block></block></block></script></block></script><script><block collabId="item_341_15" s="doReport"><l>Not Connected</l></block></script></block></script></block-definition><block-definition collabId="item_71" s="micro:bit %&apos;V2sensor&apos; on robot %&apos;robot&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%txt" readonly="true">Temp (˚C)<options>Temp (˚C)&#xD;Sound</options></input><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input></inputs><script><block collabId="item_75" s="doIf"><block collabId="item_90" s="reportNot"><block collabId="item_75_1" s="reportEquals"><block collabId="item_79" var="V2sensor"/><l>Sound</l></block></block><script><block collabId="item_75_2" s="doSetVar"><l>V2sensor</l><l>Temperature</l></block></script></block><block collabId="item_77" s="doReport"><block collabId="item_77_1" s="reportURL"><block collabId="item_77_2" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/in/</l><l>V2sensor</l><l>/</l><block collabId="item_101" var="V2sensor"/><l>/</l><block collabId="item_77_5" var="robot"/></list></block></block></block></script></block-definition><block-definition collabId="item_140" s="micro:bit orientation is %&apos;orientation&apos; on robot %&apos;robot&apos;" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%txt" readonly="true">Screen Up<options>Screen Up&#xD;Screen Down&#xD;Tilt Left&#xD;Tilt Right&#xD;Logo Up&#xD;Logo Down&#xD;Shake</options></input><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input></inputs><script><block collabId="item_217" s="doIfElse"><block collabId="item_218" s="reportEquals"><block collabId="item_219" s="reportURL"><block collabId="item_220" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/in/orientation/</l><block collabId="item_222" var="orientation"/><l>/</l><block collabId="item_227" var="robot"/></list></block></block><l>true</l></block><script><block collabId="item_228" s="doReport"><block collabId="item_230" s="reportBoolean"><l><bool>true</bool></l></block></block></script><script><block collabId="item_229" s="doReport"><block collabId="item_231" s="reportBoolean"><l><bool>false</bool></l></block></block></script></block></script></block-definition><block-definition collabId="item_144" s="stop all on robot %&apos;robot&apos;" type="command" category="control"><header></header><code></code><translations>ko:모두 멈추기&#xD;de:stoppe alles&#xD;pt:pare todos&#xD;fr:stop tout&#xD;nl:stop alle&#xD;zh_CN:停止 全部&#xD;zh_TW:停止 全部&#xD;ar:توقف الكل&#xD;dk:stop alle&#xD;he:להפסיק הכל&#xD;es:detener todo&#xD;ca:atura tot&#xD;fi:pysäytä kaikki&#xD;sv:stop allt&#xD;</translations><inputs><input type="%txt" readonly="true">A<options>A&#xD;B&#xD;C</options></input></inputs><script><block collabId="item_323" s="doReport"><block collabId="item_323_1" s="reportURL"><block collabId="item_323_2" s="reportJoinWords"><list><l>http://127.0.0.1:30061/hummingbird/out/stopall</l><l>/</l><block collabId="item_326" var="robot"/></list></block></block></block></script></block-definition></blocks>